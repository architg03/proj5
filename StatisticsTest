import student.TestCase;



/**
* The test class for the Statistics class, testing
* all methods within Statistics.
*
* @author Joshua Lee
* @version 11/18/2022
* @author Abia Zahir
* @version 11/18/2022
* @author Archit Gupta
* @version 11/18/2022
*/
public class StatisticsTest extends TestCase {
    private Statistics stats;
    
    
    /**
     * Makes all objects for testing.
     */
    public void setUp() {
        stats = new Statistics(1, 2, 3, 4, 5);
    }
    
    /**
     * tests the getLikes() method.
     */
    public void testGetLikes() {
        assertEquals(1, stats.getLikes());
    }
    
    /**
     * tests the getPosts() method.
     */
    public void testGetPosts() {
        assertEquals(2, stats.getPosts());
    }
    
    /**
     * tests the getFollowers() method.
     */
    public void testGetFollowers() {
        assertEquals(3, stats.getFollowers());
    }
    
    /**
     * tests the getComments() method.
     */
    public void testGetComments() {
        assertEquals(4, stats.getComments());
    }
    
    /**
     * tests the getViews() method.
     */
    public void testGetViews() {
        assertEquals(5, stats.getViews());
    }
    
    /**
     * tests the isLessThanOrEqualTo() method.
     */
    public void testIsLessThanOrEqualTo() {
        Statistics stats1 = new Statistics(1, 2, 3, 4, 5);
        Statistics stats2 = new Statistics(2, 3, 4, 5, 6);
        
        Statistics stats3 = new Statistics(1, 1, 2, 3, 4);
        Statistics stats4 = new Statistics(0, 2, 2, 3, 4);
        Statistics stats5 = new Statistics(0, 1, 3, 3, 4);
        Statistics stats6 = new Statistics(0, 1, 2, 4, 4);
        Statistics stats7 = new Statistics(0, 1, 2, 3, 5);
        
        
        assertTrue(stats.isLessThanOrEqualTo(stats1));
        assertTrue(stats.isLessThanOrEqualTo(stats2));
        
        
        assertFalse(stats.isLessThanOrEqualTo(stats3));
        assertFalse(stats.isLessThanOrEqualTo(stats4));
        assertFalse(stats.isLessThanOrEqualTo(stats5));
        assertFalse(stats.isLessThanOrEqualTo(stats6));
        assertFalse(stats.isLessThanOrEqualTo(stats7));
        
    }
    
    /**
     * tests the equals() method.
     */
    public void testEquals() {
        Statistics stats1 = new Statistics(1, 2, 3, 4, 5);
        Statistics stats2 = new Statistics(0, 1, 2, 3, 4);
        assertTrue(stats.equals(stats));
        assertTrue(stats.equals(stats1));
        
        assertFalse(stats.equals(stats2));
        assertFalse(stats.equals(null));
        assertFalse(stats.equals("false"));
    }
    
    /**
     * tests the compareTo() method.
     */
    public void testCompareTo() {
        Statistics stats1 = new Statistics(1, 2, 3, 4, 5);
        Statistics stats2 = new Statistics(0, 1, 2, 3, 4);
        Statistics stats3 = new Statistics(2, 3, 4, 5, 6);
        
        assertEquals(0, stats.compareTo(stats));
        assertEquals(0, stats.compareTo(stats1));
        assertEquals(1, stats.compareTo(stats2));
        assertEquals(-1, stats.compareTo(stats3));
    }

}
