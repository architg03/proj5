import java.text.NumberFormat;

// TODO: Auto-generated Javadoc
/**
 * The Class EngagementCalculator.
 */
public class EngagementCalculator {

    public static final int RATING = 0;

    /** The rate. */
    double rate = 0;

    /** The reach. */
    double reach = 0;

    /** The total eng. */
    int totalEng = 0;

    /** The total fol. */
    int totalFol = 0;

    /** The Constant RATE. */
    public static final int RATE = 3;

    /**
     * Instantiates a new engagement calculator.
     *
     * @param comments
     *            the comments
     * @throws IllegalException
     *             the illegal exception
     */
    public EngagementCalculator(Statistics comments) throws IllegalException {
        this.RATING = RATING;
    }


    /**
     * Gets the engagement rate.
     *
     * @return the engagement rate
     */
    public double getEngagementRate() {
        /** The formatter. */
        rate = (totalEng / totalFol) * (0.1);
        return rate;
    }


    /**
     * Gets the engagement reach.
     *
     * @return the engagement reach
     */
    public double getEngagementReach() {
        reach = (totalEng / reach) * (0.1);
        return rate;

    }


    /**
     * Gets the engagement.
     *
     * @return the engagement
     */
    public int getEngagementJanruary() {
        Statistics stat = new Statistics(Months.JANRARY, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        totalEng = stat.getComments() + stat.getLikes();
        return totalEng;
    }
    /**
     * Gets the engagement.
     *
     * @return the engagement
     */
    public int getEngagementFebruary() {
        Statistics stat = new Statistics(Months.FEBRUARY, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        totalEng = stat.getComments() + stat.getLikes();
        return totalEng;
    }  /**
     * Gets the engagement.
    *
    * @return the engagement
    */
   public int getEngagementMarch() {
       Statistics stat = new Statistics(Months.MARCH, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
       totalEng = stat.getComments() + stat.getLikes();
       return totalEng;
   }

    /**
     * Gets the followers.
     *
     * @return the followers
     */
    public int getFollowersJanruary() {
        Statistics stat = new Statistics(Months.JANRARY, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        return stat.getFollowers();
    }
    /**
     * Gets the followers.
     *
     * @return the followers
     */
    public int getFollowersFebrruary() {
        Statistics stat = new Statistics(Months.FEBRUARY, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        return stat.getFollowers();
    }
    /**
     * Gets the followers.
     *
     * @return the followers
     */
    public int getFollowersMarch() {
        Statistics stat = new Statistics(Months.MARCH, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        return stat.getFollowers();
    }


    /**
     * Gets the reach.
     *
     * @return the reach
     */
    public int getReachMarch() {
        Statistics stat = new Statistics(Months.MARCH, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        return stat.getViews();
    }
    /**
     * Gets the reach.
     *
     * @return the reach
     */
    public int getReachJanruary() {
        Statistics stat = new Statistics(Months.JANRARY, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        return stat.getViews();
    }
    /**
     * Gets the reach.
     *
     * @return the reach
     */
    public int getReachFebruary() {
        Statistics stat = new Statistics(Months.FEBRUARY, stat.getLikes(), stat.getPosts(), stat.getFollowers(), stat.getComments(), stat.getViews());
        return stat.getViews();
    }
}